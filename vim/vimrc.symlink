set nocompatible              " be iMproved, required
filetype off                  " required
set number                    " turn on line numbers
set relativenumber            " turn on relative line numbers
set hidden                    " Allow switching buffers without saving
set cursorline                " Highlight current line so you don't have to search for the cursor

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.
" plugin on GitHub repo
Plugin 'tpope/vim-fugitive'
" plugin from http://vim-scripts.org/vim/scripts.html
Plugin 'L9'
" Git plugin not hosted on GitHub
Plugin 'git://git.wincent.com/command-t.git'
" git repos on your local machine (i.e. when working on your own plugin)
Plugin 'file:///home/gmarik/path/to/plugin'
" The sparkup vim script is in a subdirectory of this repo called vim.
" Pass the path to set the runtimepath properly.
Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
" Install L9 and avoid a Naming conflict if you've already installed a
" different version somewhere else.
Plugin 'ascenator/L9', {'name': 'newL9'}

"vundle"
Plugin 'editorconfig/editorconfig-vim'

" fzf
Plugin 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line


" make arrow keys work in iTerm on OS X: http://isaacschlueter.com/2007/04/fix-for-vis-broken-arrow-key-support-in-iterm/
"set term=linux

" Automatically reload .vimrc when changing
autocmd! bufwritepost .vimrc source %

"/*[ Settings ]*******************************************************************/

" Set syntax highlighting on
:syntax on

" Set standard setting for PEAR coding standards
set tabstop=4
set shiftwidth=4

" Auto expand tabs to spaces
set expandtab

" Auto indent after a {
set autoindent
set smartindent

" Use incremental searching
set incsearch

" Jump 5 lines when running out of the screen
set scrolljump=5

" Indicate jump out of the screen when 3 lines before end of the screen
set scrolloff=2

" Correct indentation after opening a phpdocblock and automatic * on every
" line
set formatoptions=qroct

" automatically update the file if it was changed outside of VIM
:set autoread

" make sure searches are highlighted
:set hls

" Show ruler on command line w/ current line & column number
:set ruler

" When closing parens, show opening paren character
:set showmatch

" Show current edit mode, and wether or not file has been edited since last save
:set showmode

" case insensitive searches
:set ignorecase

":filetype plugin on
":helptags ~/.vim/doc

nnoremap <silent> [b :bprevious<CR>
nnoremap <silent> ]b :bnext<CR>
nnoremap <silent> [B :bfirst<CR>
nnoremap <silent> ]B :blast<CR>
" Mute search highlighting w/ CTRL-l
nnoremap <silent> <C-l> :<C-u>nohlsearch<CR><C-l>
" tip 42 of Practical Vim - expands active file directory into command mode
cnoremap <expr> %% getcmdtype() == ':' ? expand('%:h').'/' : '%%'

" Fuzzy Finding (fzf) stuff
let mapleader = ","
nmap <Leader>; :buffers<CR>
nmap <Leader>t :files<CR>
nmap <Leader>r :tags<CR>

" https://twitter.com/vimrclines/status/933244408568467456
" Preserve visual selection when indenting and outdenting
vnoremap > >gv
vnoremap < <gv
